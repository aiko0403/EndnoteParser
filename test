TY  - JOUR

JO  - Visualization and Computer Graphics, IEEE Transactions on
TI  - Raytracing Dynamic Scenes on the GPU Using Grids
T2  - Visualization and Computer Graphics, IEEE Transactions on
IS  - 1
SN  - 1077-2626
VO  - 18
SP  - 5
EP  - 16
AU  - Guntury, S.
AU  - Narayanan, P. J.
Y1  - Jan. 2012
PY  - 2012
KW  - cache storage
KW  - computer graphic equipment
KW  - coprocessors
KW  - data structures
KW  - grid computing
KW  - multiprocessing systems
KW  - ray tracing
KW  - rendering (computer graphics)
KW  - sorting
KW  - GPU
KW  - L1 caches
KW  - L2 caches
KW  - camera
KW  - data structures
KW  - enforced coherence method
KW  - grids
KW  - high performance raytracing
KW  - independent voxel walk method
KW  - light source
KW  - manycore architectures
KW  - raytracing dynamic scenes
KW  - reflection rays
KW  - refraction rays
KW  - voxel mapping
KW  - Coherence
KW  - Data structures
KW  - Graphics processing unit
KW  - Instruction sets
KW  - Light sources
KW  - Tiles
KW  - GPU.
KW  - Raytracing
KW  - grids
KW  - load balancing
KW  - ray coherence
VL  - 18
JA  - Visualization and Computer Graphics, IEEE Transactions on
DO  - 10.1109/TVCG.2011.46
AB  - Raytracing dynamic scenes at interactive rates have received a lot of attention recently. We present a few strategies for high performance raytracing on a commodity GPU. The construction of grids needs sorting, which is fast on today's GPUs. The grid is thus the acceleration structure of choice for dynamic scenes as per-frame rebuilding is required. We advocate the use of appropriate data structures for each stage of raytracing, resulting in multiple structure building per frame. A perspective grid built for the camera achieves perfect coherence for primary rays. A perspective grid built with respect to each light source provides the best performance for shadow rays. Spherical grids handle lights positioned inside the model space and handle spotlights. Uniform grids are best for reflection and refraction rays with little coherence. We propose an Enforced Coherence method to bring coherence to them by rearranging the ray to voxel mapping using sorting. This gives the best performance on GPUs with only user-managed caches. We also propose a simple, Independent Voxel Walk method, which performs best by taking advantage of the L1 and L2 caches on recent GPUs. We achieve over 10 fps of total rendering on the Conference model with one light source and one reflection bounce, while rebuilding the data structure for each stage. Ideas presented here are likely to give high performance on the future GPUs as well as other manycore architectures.
ER  - 
